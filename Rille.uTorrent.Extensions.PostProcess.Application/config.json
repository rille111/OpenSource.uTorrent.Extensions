{
  // TODO: Test UnpackTorrentsFolderOnly after all fixing (ITS UNTESTED NOW!!!!)

  // Operating mode
  // WorkWithTorrentApi : Uses the torrent web api to to work with torrents, using labels to set working status.
  // UnpackTorrentsFolderOnly : (UNTESTED) Skips the torrent integration entirely, only iterating thru the DownloadedTorrentsFolder unpacking everything, using marker files for progress.
  "OperatingMode": "WorkWithTorrentApi",

  // Exits after these many torrents
  "MaxProcessTorrentsInBatch": "99",

  // Restart torrent if network path not found or network error.
  "RestartErrorTorrents":  true,

  // Folders
  "FinalFolder": "Z:\\torrents\\unpacked\\",
  "DownloadedTorrentsFolder": "Z:\\torrents\\finished\\",

  // Delete strategies
  "DeleteFromTorrentsFolderWhenUnpacked": true, // Deletes torrent when processing is complete (and goals reached). Safety mechanism.
  "DeleteAlreadyProcessedTorrents": true, // Deletes only the next run of the program, if the torrents are already processed.

  // Supported archives (possible file-extension of the first file of an archive multivolume). Keep lowercase!
  "ArchiveFirstFilePossibleFileExtensions": [ "rar", "zip", "7z" ], // Must be lowercase!

  // Regex: Determine if file is part of an archive volume, using the following patterns. Keep lowercase!
  // Will only be used in the parent folder of the torrent to decide which files to copy or not
  "IsArchivePatterns": [
    "^([0-9][0-9][0-9])$", // ex: .001, .999
    "^([rs][0-9][0-9])$", // ex: .r01, .s99
    "^(rar)$", // ex: .rar
    "^(zip)$", // ex: .zip
    "^(7z)$" // ex: .7z
  ],

  // Ignore patterns when copying files and folders (keep lower case! This is .NET regex, which means that some stuff dont work.(

  "IgnoreFileExtensionPatterns": [
    "^(sfv)$",
    "^(diz)$",
    "^(torrent)$"
  ],
  "IgnoreFileNamePatterns": [
    "(torrent downloaded)",
    "(uTorrentPartFile)"
  ],
  "IgnoreFolderPatterns": [
    "^(sample)$",
    "^(screens)$",
    "^(proof)$"
  ],

  // Unpacking

  // The actual extractor (7z is safest, not tested anything else)
  "UnpackerExeFileFullPath": "c:\\programs\\7z\\7z.exe",
  "UnpackerHideWindow": "true", // If false, some errors from unpacker cant be logged (because of 7z), but you will have a window where u can observe the unpacking. Good for debugging
  // Command template. Change only at your own risk! Supported params are:
  // Archive : full path to the archive first file
  // DestinationFolder : As it says, archives in sub folders will be extracted to correct subfolder in the destination
  "UnpackerParameters": "x [Archive] -o[DestinationFolder] -aos -y", // For 7z, the switches means: -o[destination] -aoa Overwrite all, -aos Skip existing, -y Assume yes on all queries

  // Web must be activated without security. (security not yet supported)
  "TorrentWebApiUrl": "http://127.0.0.1:8080/",
  "TorrentWebApiLogin": "admin",
  "TorrentWebApiPassword": "admin",

  "SeedingGoals": [
    {
      "TrackerRegex": "speed",
      "SeedRatioPercent": 250
    },
    {
      "TrackerRegex": "leechers", //tpb
      "SeedRatioPercent": 0
    },
    { // DONT REMOVE THE DEFAULT
      "TrackerRegex": "DEFAULT", // if the loaded trackers contain this string (.net regex!)
      "SeedRatioPercent": 200
    }
  ]
}